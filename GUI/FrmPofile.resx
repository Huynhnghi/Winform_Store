<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAABaPSURBVHhe7Z0HWFRXosd1s5tNebtvk817C5vEZFNMXoxd
        UVERhKEX6VWQ3lUQaaIIKEVFBkawIVIEEQGN3TA6g7EkCjGxxRbbvYNmjXWTGEv8v+9cnRHOGRB0KJr5
        f9/vY4bbzvn/Obecc++lVy+ttNJKK6200korrbTSSiuttNJKq+dK2PLBn29u1x19TfoPo6t1r/03PV2r
        TtZV6ZsDsPetl8nn63U65telOoobUl0Qrtfp/HJdqhtHL/Ncqgp44YtL59+TN3EWMo6LkvF8poznl8h5
        vlSu4KsEeH65jOdz5QouTcbzvnKeH7X3woXX6XU9qX7a+obu9Trd+9elOrOu7nhz4HWpzm1lGM25Xqfr
        QS/7zOvIkSMvyhWKsXKeT5bzvFyu4G/JFTyeBJmCV8h4vrxeofAnodLb6ohuSP8x6cq2f759vU5nAx2E
        ijodDujVm172mdTOpqahwl85z12mjdUUMp47KlNws3c0Nb1Db7+9uiHVPcME0byVbHtLYy2zy7X3woWX
        ZQpFhFzBn6bN61R47p5MwW2o53l9ukyP0w2p7gE6BFUYdTq3UPXJi/QyPV7bL158Va5QxMp57hJjVtcj
        q+e48XQZW9ONOp1oOohH6Kyi5+/xkvO8jZznzqkxppvhNrZnVwZZrz/ekOquYcPQPXBTpvsGPX+PFams
        TMFvZo3oQfDcTzKejyFndnT5ad2U6tpfl+oW35DqlF+X6oSQoOh5eqzkPG8rU/BXGAN6LrLd58//k67H
        M6+GhoY/yXk+R8Zz99VUumfDc5d28rwxXadnVuTALeP5LUxFnyWEs7ELAXTdWlOybNwfk1eOe4n+fbeL
        XCXLFNwepoLPIKR1k2sXuo60MmpE4zNqRNcyakV30mtNQujp3SaZQvEGuQCjK/asI1NwKXRdmyuzVlSX
        WSsCIaPW5Ao9vVvUoFC88ry0DHXIFNxUus5KZdSYFDYLpJGe3uV6eADfRlfieULGc7/Jed6FrjtRzrpx
        f8usFS3IqBEty6g2fqp+M41IxvNiugLPKbfkPD+Yrn+PkoznrTV5arv5u2PI27IJM0tKEC2RIKW8DIs/
        34a6M98z83YHMgV/8ssff/wr7UOP0MMr8Kt0oTvKphPH4Z+aAhNnRwxxdcF74WF4My4WOklJeCtmGt4P
        CcYIR3tYeLhiuiQPO86fY9bRGRz44Qdc+vlnnLt5E/VNCtXvZTzfM/utSB8QXYmOsOPCefjOmolR9nZ4
        IzUVvVeVoVd5eau8UFKCt6bHwMjGGokF+cz6NM3Pd+9CqdM3rreczvM2tB/dKnkT50BXoCOsaWiAqZOD
        0Apo4x9H77IyfBgcBAd/X2w/fYpZt6a4/dtvqkBIK2k+TcZz58kFMO1Lt+jBlTh3nq5Ae6k6sB+G1lZ4
        uSCfMbsjkFZlNcEOdd+fZrahCQ5f+RE/3bmDH2/dwp6LTcx0MmxMe9Mtkiu4OLZw7WPzsaMwnmCDl/PV
        h/G3ilUwWl2EiWsKEbhmOdzWFGLY6mK8XL6KmZfwv8nJcPJwg4w7z2yrC7hVf+6cLu1Pl0p29uxLMgXf
        pKZw7cI9NASvz53bwtQXy1fBubIQZWsX4VhNDo6r4dsaMfKrCjC+ciV6U6F8EhiAFEkus60ugeczaI+6
        VA+HXdmCtYMSaR2GurupjCTGOlaugLw6lwmgLTauzcPI1StV63lh5UqYmYzH1mNHmW12NjKeu/HF+fOv
        0T51iQD0fpoxcK+QYPx1wXzBxL9XlKFwbT5jdnv5riYHSVVL8cLDUPqGBGNuN7USGc9Pp73qEgm36Kgp
        UHvYce4sTM1MBfP+WVGK7dV5jMlPQt7aAvypvBz/JRbDwc6W2W6XwPNHaK+6RHKeX8YUpp1UymXQd3XC
        K+WrsK1awhj7NMSvWYpeq1bBfMig7jq4k1C6tkvlwU1s/DWmIO0kb2URPvXzRVrVEsbQQ5XzsWF+DAqi
        fZHm64h4FyscKM1oMc90JwuEWxljjp8TypPD0dhsOtl96VUWw3TcWNR8tZfZdlcgU3ALaM86VfVNFwzo
        QnSEqWEh0J/ogaMPTTy8ZgEqZodj6gQR3MfoIUBkgGkO5kjxccDiab5MaFvFcZBM8RECibQxhtOIIZhs
        K0Jl6mQcW7sQy6ryIdIfieVr1zLb7hJ4/jDtWadKuL2TLkQ7WddwAHYj9WA/arjK4C+WzoZUMgPfVsxj
        zG8v+4rmoGrOFGxZGIddy1Ng3r8fQrw9heMVXYbORhhd/OGsDu1bp+nhvbZMQdpiw9eNSJ2Thgkj9WAz
        aADshgxkTCWQUGozonGsOpuZRkN2ZaRlHazIavH7dZnTHmxj8AB4WVliUUlxl3VCKpHxvBvtW6eI3KvU
        kRufa/d/hTDfScJfrFm//4PD8MHCrigryBXfVS9kTCZmWg38VJiHnkZDWpaPkT6i7E1b/J7sAlO8HRDn
        agXH4YOF7TqOHY2M7AVCJyZdxubIeA7Ve/Ygr7gImTnZSJ49C4kJcUjLmIv5iyRYXr0WW787xizHwPN5
        tHedoh3nz7/PbLwV1h3YjwmjRgiGKLEZ3B/7i+eiKm1yi4OxkoOrMuE8cijc9Icx02i25ybCx5ANhFAU
        HyQEbjtkQIvth/v5QsZdYMpaunUzpkWGw0F/BJxGj0JCkC+yk+KwJCsVhdnpkKQlYW7MZES4OsJy0AB4
        W5kjfV4mNh0+xKyLIOO57bR3nSI5x1nSG2+NiED/FmYQrAf2x5q0SGwXJ2BnQRJjZOokB2E+cYQXM42G
        tJCihCAmWBLEysRgNJSlw3pQf6YMi0pLVWUs2bQRPjaW8DY3QcXSPHBnDuO3e9fa5NbPl3BwnxTzEmIw
        QW844mOmMj0DpMOV9q5TRAb4aePVQQ6mVoMHMmYQZnjYYl9RGtZnRTMmEzO/XJnG/L4jkFa2OiUSZUmh
        MO/3CbN98odCeoVjoybD3cgA8s3VuHf3KmM84cbVCzh+eB/4c0eYaYSb1zkszUqFs8FoLFld3jyQ++Rm
        D9o/jUvGc1m0+eogFaaNUOIyciiOVmWjdGYoY6Ym2LMiBevnTUPUBFNm2wQfezsEODlgzrTJ+OlmE2Oy
        koNf7sDOTWuFML4/3ogvtq9j5lHy/fEGTLIQYX6eWOVB/cWL/6L907jkCq6ANr81XIyNGDMIlv0/RWNp
        PIoSgxgzNYF0URL2Ffpiiu2nzLYJ5EyvIDOFaRVkV1QhzkBFdqrA7CAf1WdCYVo8lqXEqr4f3S9vsfyV
        f59BmLM9Fj4cwdzFcQNo/zSuh8/0qUz/okmBg5cv48tLF5lAyFkJbYbbqI+wb0kffFP8EQpjHx0nTq0V
        4/uqXOEnbfA3FVnCboicEtPHC8JJ5bJVYhyvXoiNC6bjs3RbfLWsD2rT3oH5py3LEO7qyIRB+HfTKRSF
        TsRJ8UyBlcFeqs9KpEkROCeZDcWiZBTNncGs4/LF0/AwNkTVF7uwU6EYTfunccl4vlZp+P4fLuHXe/da
        HWsmp5DxsdNbmLFr0duY5fEBLAb0E86QHhiagzOVEhXkO2363sJU7FqWzJwqn6wR42yzZUmgn2VNg0X/
        T4Qgtszrgyz/94Vtm3/6iXBcu3b5LGOkMpA5LtY4NsVRYJGdoeoz4UikI2o9zXA6yhnHJjuqDYSwp24D
        wr09IWu6YE77p3E9fOJVMPyHX35RhUF0H8BuNcOb5JQywM0F7qM/whf5b6vCCTIdJ5h6am1ui0DUtZLW
        OFktbrHs6bW5qJMkwmbwg9PdYLO+wh9BmK8PosKCkZc2kzGweSDzPezwY4IH9gfbQiIajsYwe+E7YbOH
        CPnmI4TPp6KcUZyhfl2k9flZm2PBssWTaP80LpmCW6E0+uqvv7YIhIjedZEr5Kiw0Ae7CssPsSnzHVUg
        gaYGgqknqnNwZk3eA1PX5AnfaeNbo/myZyvzcKJG3CIQ//F9US/pA9vhw+A4ZhS+pfb7rQVyKd4dMj9r
        XI53VwVyaqozvgyxfWwghIolufB3sl9B+6dxPXgO/IHZx69dbRHG9du3mdaRlpGuCsBu6Mc4UvYWbAZ9
        LHx3H/2oP4sYe6JarAqjMjkMKS6WWBjpp5Y5nnYoiwtotrwYJx5+Xi/ssh70DJTEvwtx6HuqMuz+fD1j
        nrpAHsfjAiFnZN4WpnLaP41LruBSmxt+9OoVXPrlwQ1k6nZX7mYilRmELL/3sTv/bQSa9IXlgH74elUm
        81dPmGY1HpFv6uDyuaNMZW/95yJmDR+ENBsjZjlCrLMlgkz7ojrlXUhz+sBqwKPtz4uLZtbXGYEcOlCP
        iWYmX9H+aVzCGxIo09vCzWR8i0AI0RM+xNb5fRAw/iNMsTNV25FYMNUboX3fw7QP3kWmyBDzzI1VxH3S
        FxF93kRusCuz3PqsGCFoScR7SHL7gDnDSgr2Z8zrjEB2bFgD17H6FbR/Ghd5pps2vS0SE+KZQJpDzCN/
        0UfWLGhhLDmbmuFkjvB+H6Hw4wGQDTaAfIgBKvsNQ8SH7yHe1kToRGy+jHzJLLVdJc3JiotizOuMQAoy
        Uu5bDR7gR/uncZGnomjT22LjoW9hN2I4Y0yLUPp/Cn+Tsdi3gu0y2ZgejXRzE8wba4DM0WMx18QIlQ87
        DpvPV79kFmwHtx2GzfBhiPbxZMzTdCDkAtPT2PC2aMCArrmbkbw7hDa+LVbv3AkngzGMQc0h1wik47Hs
        CbpTyIWg9UD1V+VKSK9BubQO9qP0cGDXVsZEZSDlga7Y4OeAtd52bXI2wa/VQEgnZVRwwH7at04TeZEL
        bfrjII8Q5CxbiujIcPg5OcLbzgb+Ls5CRx8JQ2kcuaCLcTRHY2k6Y7w6CqZNguXDMypz0tJcnIXwSat0
        NzURutsX5OerHmHILyuFi8FoXOJPMEbe/vUyciY64urcqbia3jYn4/2xZdUyZh1Hv94Nf3tbbGhs7Pwn
        d4HkP9xrcPO59m3Ul03H5uHY6VrUK9ixhY5CBn1cjMapQiHHlUDRGOHATrpLyO6JdKUfLH8wMki+l84M
        Fk6bybxkGVfj8SjevIlZtzpSUmcLHYHnTn3DGFq/cQ1yvewhjfSCfIq3WtaHuCEraCJ+/eWHFssebtwF
        H2tzrN2759aWkyf/TPunUeGk+Z/vNLhL7za6ozlXDidil+Lph0elZ78XhlqnhATBcfQIzJ1kh6rZQcgM
        cEJupBcK4wJQPCNY+J4y0QZLojyFwadQHy/kFa3o8Nj5fEkuHEYMx/baciaUO7d/RNP5Y0IvrzpuXONa
        zH/vzhVsrFyJSTaWWN9woGsGp+42uM2hw1By5sQKpsJPQ0xkCMRhLtiQEa7is/QwVMwMUH2vSQtBkJMd
        s2xHKN26FdZDBuL8abaltAfSRfL1Xiki3V2QFB+LbSdPCOut57hg2j+N606Du4IOQslPB0OYyj4NQc72
        KIyZ2CIQdfhZmTzVzXBkKNdyYH9c+/EcY3ZrkN3UoYZ6VCwRw9/WCjHhoajYuePROhX87Tqe/zvtn8Z1
        p8H9VzoIJbe/nshUtqOQPq9lZUWIdHdEkLkBPktnA6CZF+AAP0sTSApyn+i5EHJKbjt0MGM6geyWclNn
        InlqGOKD/RHu5gRvMxN4mBhhengoFi5epH48neerae86RXcb3A/QQSi5diiWLVg7IHeAFK4uQ7SfFzzG
        6SPW0RRLoz2xIT2MMb81imJ9EOMggsuoYZjq5YTC8lLsfMydJUokJSsRFziJCYOMl/tYmGGBJBeV8p2o
        2r0Lmw59077jFMdZ0t51iu5+7WF3p8H9Ph3G3UYPHDxbzxasFcgupmx9DeJD/eE9fiymO4iwNMqrXS2i
        TdLDhPWQ9bmO1sNkb3fkl6wQxmToMiiZHOCHDRVFQgjK40FSaCD87G1b7IY6wDfkqQDau07TvUZ3tzuN
        7leUYdxpcLt28lTFd2oKxvBZYwPiI4LgaaiPBBfzdh0jnoT1mRFYkR2P6igvzLIxhMfYEZg+OQi1e3Yz
        ZSK38pDbe+YlTIOniRFC3FyE6xR1twm1C553pj3rdKHB+pU7Da5jCeQzeS0eU7BmkN1HRlY6vI3HIDvE
        Cevntn931BE+y4hAcd4MHM+djms5U1VcnBeBjeGuCLEwxERHG6z/ap+qbKQVpCTPhKS4COsbDzBl7wjk
        vS4A/kD71S2S8XwNXcCHhcTU0CDEulphfQeOCx2hJjMSxXlJOJIb2yKI5hzJi4V1UT7+Is6BmcgImw4d
        ZMr6tHTJcG17Vc/zb8t57j90IXOWLUGEoyVjoiZYM38qVkmS8H1uDBOAksviKMxZmolXV5WqHnl7LTMT
        rr7ejKFPB7ea9qTbRd5R2LyQZFflZDAa5Un+jJlPSuW8KBTlJmKLZAb+nRPFBNCc1QWz8XFJYYsHQpWM
        tTDD5xp6pp08V9gjXwNI9p8ynvtcWdBVn2+Dn7UZY2pbkOPA6nlRKM2ejpXiBJTkJaFakoT6vEScEbfe
        EpqzddFMjCpeyoTQHPJ6jvmrKxhzn4R6xQVP2oseI+mlS/9QPiadvTgfUZ4TcCE3WjjQfp0Xh715CZBK
        EiHNSxQ+KzmYF4vT7TRcHZfE0ShYnIbBxcsY89WhM2MGApMSGHM7DldAe9DjRF4YKee5uylzUpEw0Z4x
        T5PIJDMwdfkC/E9ZCWN6W/wtKxMOfj5qDO4APNdAntOn698jRZoxCWS2jwNj4tNwKnc6igtS4FsoRp/S
        Isbo9vLS4sWwcnJgTX4Mu/izOHN8BZqOZt68dHRm5493aFLxsdNrzQ3HwFgyH4GFC5G5JAMV+bOxbVES
        9kvicTo3RjgLam74OfE04RR1nyQBtfnJEC+ei+hlC2CxMh9vlj56OcDT8oeSEphZmDGGPw4ShuqiuNGt
        iYwP0fXuyeodGuC/VzRaH68sWsSY0t2ITI0Zwx9H05GsW48Ccb9HLozpSvd4hQUFbjTVHyE8zE+b0p0Y
        i8YzhreFjOfO8N/l2JKWQcK40+A+i67rM6OoyREFFnrD8GZCPGNMdzG+I4GQA/jDp2rJbgp7nYV/efRM
        KykpYYKd4di7g7088EJJMWNQV2PU3kB4vrRLnoTqDs1JTNT19fS4IBqrjzfSUhmTuhJDk7YDIVfgrb0K
        9rnTjBkJs2wMxtwb4eSAl5YsZszqCsa1GQi3kfTP0eV+rpWdnfx6eGjQbgu9oRjk5dHqW+U6CwM1gQj/
        m4rnTeiy/q6UvmBB35CgwN0WesPu67m54LWMDOFtPrSBmmasidGjIBT8ITnHebfnH7j8bpSWlvav6CmT
        N0wQGd8xG6OPj4OD8NfsbPTWcDiv5uViYGgwzIcPJa+/qCFj4F067NqdylpnOiGjxjgyu8q0Q/9Cbtas
        We4hAf6NduMN75rpDYO+kwPeiY7C6xnpeHH5csbk1iBhvirJw7vxsRjn7QHrcWNgNWzwPU8rywMuRgbe
        9Hafa2XUiMKV/yUgs9bkG3p6e5WYnDgoaurkgsCJXkcdLc3/YzFsyH1zvWHCexVNrC1g6GgPAw9XjPNy
        h6HTBJg428PC0gxWY/RhMWTgfQeDMT/7Oth/6+/iInYYOXK0s3Ov3+duKbNWVP4oEBGy1tv+hZ7nSRXs
        4/Nu9JQQ22nh4UGRwYEzIvx9s8N8fbIjfH3iQ318goI9Pe3t9fTeIt039LK/W2XWmFiR/zIjBFIj6pqb
        x7RqWxnrzN7NXGeqn5z8bPWKaqWVVlpppZVWWmmllVZaaaWVVlr16vX/OwCJCCG0sssAAAAASUVORK5C
        YII=
</value>
  </data>
</root>